Traceback (most recent call last):
  File "/u/mlowery/Geo-FNO/elasticity/diffr.py", line 632, in <module>
    out = model(inp, code=None, x_in=x_grid, x_out=y_grid, iphi=model_iphi) ### self, u, code=None, x_in=None, x_out=None, iphi=None
  File "/u/mlowery/.conda/envs/gnot/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/u/mlowery/.conda/envs/gnot/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/u/mlowery/Geo-FNO/elasticity/diffr.py", line 535, in forward
    u = self.conv4(uc, x_in=None, x_out=x_out, iphi=iphi, code=code)  # (B,width,Nout)
  File "/u/mlowery/.conda/envs/gnot/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/u/mlowery/.conda/envs/gnot/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/u/mlowery/Geo-FNO/elasticity/diffr.py", line 232, in forward
    return self._grid_to_pc(u, x_out, iphi, code)
  File "/u/mlowery/Geo-FNO/elasticity/diffr.py", line 356, in _grid_to_pc
    return self._ifft3d_nonuniform(red, x_out, iphi, code)
  File "/u/mlowery/Geo-FNO/elasticity/diffr.py", line 386, in _ifft3d_nonuniform
    basis = torch.exp(1j * 2 * np.pi * phase).to(device)  # (B,N,m1,m2,m3_full)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 12.38 GiB. GPU 0 has a total capacity of 39.38 GiB of which 10.76 GiB is free. Including non-PyTorch memory, this process has 28.62 GiB memory in use. Of the allocated memory 27.88 GiB is allocated by PyTorch, and 243.27 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
